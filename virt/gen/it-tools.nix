# Auto-generated using compose2nix v0.3.1.
{ pkgs, lib, ... }:

{

  # Containers
  virtualisation.oci-containers.containers."it-tools" = {
    image = "corentinth/it-tools:latest";
    ports = [
      "63801:80/tcp"
    ];
    log-driver = "journald";
    extraOptions = [
      "--network-alias=it-tools"
      "--network=it-tools_default"
    ];
  };
  systemd.services."podman-it-tools" = {
    serviceConfig = {
      Restart = lib.mkOverride 90 "always";
    };
    after = [
      "podman-network-it-tools_default.service"
    ];
    requires = [
      "podman-network-it-tools_default.service"
    ];
    partOf = [
      "podman-compose-it-tools-root.target"
    ];
    wantedBy = [
      "podman-compose-it-tools-root.target"
    ];
  };

  # Networks
  systemd.services."podman-network-it-tools_default" = {
    path = [ pkgs.podman ];
    serviceConfig = {
      Type = "oneshot";
      RemainAfterExit = true;
      ExecStop = "podman network rm -f it-tools_default";
    };
    script = ''
      podman network inspect it-tools_default || podman network create it-tools_default
    '';
    partOf = [ "podman-compose-it-tools-root.target" ];
    wantedBy = [ "podman-compose-it-tools-root.target" ];
  };

  # Root service
  # When started, this will automatically create all resources and start
  # the containers. When stopped, this will teardown all resources.
  systemd.targets."podman-compose-it-tools-root" = {
    unitConfig = {
      Description = "Root target generated by compose2nix.";
    };
    wantedBy = [ "multi-user.target" ];
  };
}
